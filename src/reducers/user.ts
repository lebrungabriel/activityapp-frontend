import { createSlice, PayloadAction } from "@reduxjs/toolkit";

// Define the shape of the UserState, which includes the user token and userId
export type UserState = {
  value: {
    token: string | null;
    userId: string | null;
  };
};

// Set the initial state for the user slice, with token and userId set to null
const initialState: UserState = {
  value: { token: null, userId: null },
};

// Create a user slice using createSlice from Redux Toolkit
export const userSlice = createSlice({
  // Specify the name of the slice
  name: "user",
  // Set the initial state for the slice
  initialState,
  // Define the reducers to handle actions that modify the state
  reducers: {
    // Reducer to add the user token to the state when dispatched
    addTokenToStore: (state: UserState, action: PayloadAction<string>) => {
      state.value.token = action.payload;
    },
    // Reducer to add the user userId to the state when dispatched
    addUserIdToStore: (state: UserState, action: PayloadAction<string>) => {
      state.value.userId = action.payload;
    },
  },
});

// Export the action creators generated by createSlice
export const { addTokenToStore, addUserIdToStore } = userSlice.actions;

// Export the user reducer to be used in the Redux store
export default userSlice.reducer;
